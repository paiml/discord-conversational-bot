name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: make quality

      - name: Build project
        run: make build

      - name: Create Release Archive
        run: |
          tar -czf discord-bot-course.tar.gz dist/ docs/ src/examples/
          zip -r discord-bot-course.zip dist/ docs/ src/examples/

      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "## Discord Bot Course Release" > release_notes.md
          echo "" >> release_notes.md
          echo "### What's New" >> release_notes.md
          echo "- Enhanced MCP integration" >> release_notes.md
          echo "- Improved course materials" >> release_notes.md
          echo "- Bug fixes and optimizations" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Course Contents" >> release_notes.md
          echo "- Week 1-2: Discord.js Fundamentals" >> release_notes.md
          echo "- Week 3-4: Conversational Architecture" >> release_notes.md
          echo "- Week 5-6: MCP Integration" >> release_notes.md
          echo "- Week 7-8: Production Engineering" >> release_notes.md
          echo "- Week 9-10: Advanced Features" >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            discord-bot-course.tar.gz
            discord-bot-course.zip
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: make build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-release:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
